name: Generate OpenYurt Cluster Image

on:
  push:
    branches: [ "buildimage" ]
    paths:
      - 'config/setup/*'
      - 'config/cluster-image/*'

env:
  ALI_REGISTRY: registry.cn-hangzhou.aliyuncs.com/openyurt

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/github.com/openyurtio/openyurt

      - name: Install sealer
        run: |
          sudo wget https://github.com/sealerio/sealer/releases/download/v0.8.5/sealer-v0.8.5-linux-amd64.tar.gz && sudo tar -zxvf sealer-v0.8.5-linux-amd64.tar.gz -C /usr/bin
          sudo sealer version

      - name: Create Cluster Image Context
        working-directory: src/github.com/openyurtio/openyurt
        run: |
          mkdir -p context/yurt-yamls
          
          cp config/cluster-image/* context
          cp config/setup/yurt-controller-manager.yaml context/yurt-yamls
          cp config/setup/yurt-tunnel-agent.yaml context/yurt-yamls
          cp config/setup/yurt-tunnel-dns.yaml context/yurt-yamls
          cp config/setup/yurt-tunnel-server.yaml context/yurt-yamls
          cp config/setup/yurthub-cfg.yaml context/yurt-yamls
          cp config/setup/all_in_one.yaml context/yurt-yamls

      - name: Check Context Working-directory
        working-directory: src/github.com/openyurtio/openyurt/context
        run: |
          ls -l .
          ls -l yurt-yamls

      - name: Build Cluster Image
        working-directory: src/github.com/openyurtio/openyurt/context
        run: sudo sealer build -t oy:latest -f Kubefile .

      - name: Push Cluster Image to Dockerhub
        run: |
          sudo sealer login registry-1.docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          sudo sealer tag oy-test:latest registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/oy:latest
          sudo sealer push registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/oy:latest